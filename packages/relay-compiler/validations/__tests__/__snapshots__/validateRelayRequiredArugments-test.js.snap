// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`validateRelayRequiredArugments-test matches expected output: argument-on-field.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query TestQuery {
  node {
    hometown{
      nameWithArgs(capitalize: true)
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
PASSED
`;

exports[`validateRelayRequiredArugments-test matches expected output: argument-on-linked-field.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment SomeComment on Comment {
  commentBody(supported: "Mark") {
    ... on PlainCommentBody {
      text {
        text
      }
    }
  }
}

query ViewerQuery {
  node {
    ...SomeComment
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
PASSED
`;

exports[`validateRelayRequiredArugments-test matches expected output: auto-filled-argument-on-defer.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query QueryWithFragmentWithDefer {
  me {
    id
    ...UserFragment
  }
}

fragment UserFragment on User {
  id
  emailAddresses
  ...DeferredFragment @defer
}

fragment DeferredFragment on User {
  id
  name
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
PASSED
`;

exports[`validateRelayRequiredArugments-test matches expected output: auto-filled-argument-on-match.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment NameRendererFragment on User {
  id
  nameRendererForContext(context: HEADER) @match {
    ...PlainUserNameRenderer_name @module(name: "PlainUserNameRenderer.react")
    ...MarkdownUserNameRenderer_name
      @module(name: "MarkdownUserNameRenderer.react")
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
PASSED
`;

exports[`validateRelayRequiredArugments-test matches expected output: missing-argument-on-directive.invalid.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
# expected-to-throw

query ViewerQuery {
  node {
    body @customDirective {
      text
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: Encountered 1 error(s):
- Required argument 'level: Int!' is missing on 'customDirective' in 'ViewerQuery'.
  
  Source: GraphQL request (5:10)
  4:   node {
  5:     body @customDirective {
              ^
  6:       text
  
  Source: GraphQL request (3:1)
  2: 
  3: query ViewerQuery {
     ^
  4:   node {
  
`;

exports[`validateRelayRequiredArugments-test matches expected output: missing-argument-on-field.invalid.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
# expected-to-throw
query TestQuery {
  node {
    hometown{
      nameWithArgs
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: Encountered 1 error(s):
- Required argument 'capitalize: Boolean!' is missing on 'nameWithArgs' in 'TestQuery'.
  
  Source: GraphQL request (5:7)
  4:     hometown{
  5:       nameWithArgs
           ^
  6:     }
  
  Source: GraphQL request (2:1)
  1: # expected-to-throw
  2: query TestQuery {
     ^
  3:   node {
  
`;

exports[`validateRelayRequiredArugments-test matches expected output: missing-argument-on-linked-field.invalid.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
# expected-to-throw
fragment SomeComment on Comment {
  commentBody {
    ... on PlainCommentBody {
      text {
        text
      }
    }
  }
}

query ViewerQuery {
  node {
    ...SomeComment
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: Encountered 1 error(s):
- Required argument 'supported: [String!]!' is missing on 'commentBody' in 'SomeComment'.
  
  Source: GraphQL request (3:3)
  2: fragment SomeComment on Comment {
  3:   commentBody {
       ^
  4:     ... on PlainCommentBody {
  
  Source: GraphQL request (2:1)
  1: # expected-to-throw
  2: fragment SomeComment on Comment {
     ^
  3:   commentBody {
  
`;
